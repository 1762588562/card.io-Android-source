buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
    }
}

apply plugin: 'com.android.library'

repositories {
    mavenCentral()
}

def getBuildVersion = { ->
    "git describe --match=*[0-9]*.[0-9]*.*[0-9] --tags --dirty --always".execute().text.trim()
}

ext {
    sdkDir = android.plugin.sdkFolder
    ndkDir = android.plugin.ndkFolder
    adb = new File("${sdkDir}/platform-tools/adb")

    build_time = new Date().format("MM/dd/yyyy HH:mm:ss Z")
    build_year = new Date().format("yyyy")
    product_name = "card.io-Android-SDK"

    jar_name = product_name.replaceAll("-", "")
    product_version = getBuildVersion()
    bundle_name = jar_name + "-" + product_version
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 21

        buildConfigField "String", "PRODUCT_NAME", "\"${product_name}\""
        buildConfigField "String", "PRODUCT_VERSION", "\"${product_version}\""
        buildConfigField "String", "BUILD_TIME", "\"${build_time}\""

        testApplicationId 'io.card.development'
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir 'src/main/libs'
    }

    buildTypes {
        debug {
        }

        release{
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-build.cfg'
        }
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        commandLine "$ndkDir/ndk-build",
                '-C', file('src/main/jni').absolutePath,
                'clean'
    }
    clean.dependsOn cleanNative

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        commandLine "$ndkDir/ndk-build",
                '-C', file('src/main/jni').absolutePath,
                '-j', Runtime.runtime.availableProcessors(),
                'all'
    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }

    tasks.whenTaskAdded { theTask ->
        if (theTask.name == "packageReleaseJniLibs"
         || theTask.name == "packageDebugJniLibs") {
            theTask.dependsOn(buildNative)
        }
    }
}

dependencies {
    compile files("${buildDir}/native-libs/native-libs.jar")

    androidTestCompile "com.jayway.android.robotium:robotium-solo:5.2.1"
}